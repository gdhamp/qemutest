\hypertarget{group__ComplexFFT}{}\section{Complex F\+FT Functions}
\label{group__ComplexFFT}\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
Collaboration diagram for Complex F\+FT Functions\+:
% FIG 0
\subsection*{Modules}
\begin{DoxyCompactItemize}
\item 
\hyperlink{group__CFFT__CIFFT}{Complex F\+F\+T Tables}
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{group__ComplexFFT_gade0f9c4ff157b6b9c72a1eafd86ebf80}{arm\+\_\+cfft\+\_\+f32} (const arm\+\_\+cfft\+\_\+instance\+\_\+f32 $\ast$S, float32\+\_\+t $\ast$p1, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Processing function for the floating-\/point complex F\+FT. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_ga68cdacd2267a2967955e40e6b7ec1229}{arm\+\_\+cfft\+\_\+q15} (const arm\+\_\+cfft\+\_\+instance\+\_\+q15 $\ast$S, q15\+\_\+t $\ast$p1, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Processing function for the Q15 complex F\+FT. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_ga5a0008bd997ab6e2e299ef2fb272fb4b}{arm\+\_\+cfft\+\_\+q31} (const arm\+\_\+cfft\+\_\+instance\+\_\+q31 $\ast$S, q31\+\_\+t $\ast$p1, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Processing function for the fixed-\/point complex F\+FT in Q31 format. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_ga9fadd650b802f612ae558ddaab789a6d}{arm\+\_\+cfft\+\_\+radix2\+\_\+f32} (const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+f32 $\ast$S, float32\+\_\+t $\ast$p\+Src)
\begin{DoxyCompactList}\small\item\em Radix-\/2 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
arm\+\_\+status \hyperlink{group__ComplexFFT_gac9565e6bc7229577ecf5e090313cafd7}{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+f32} (arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+f32 $\ast$S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Initialization function for the floating-\/point C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
arm\+\_\+status \hyperlink{group__ComplexFFT_ga5c5b2127b3c4ea2d03692127f8543858}{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q15} (arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q15 $\ast$S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Initialization function for the Q15 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
arm\+\_\+status \hyperlink{group__ComplexFFT_gabec9611e77382f31e152668bf6b4b638}{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q31} (arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q31 $\ast$S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Initialization function for the Q31 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_ga55b424341dc3efd3fa0bcaaff4bdbf40}{arm\+\_\+cfft\+\_\+radix2\+\_\+q15} (const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q15 $\ast$S, q15\+\_\+t $\ast$p\+Src)
\begin{DoxyCompactList}\small\item\em Processing function for the fixed-\/point C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_ga6321f703ec87a274aedaab33d3e766b4}{arm\+\_\+cfft\+\_\+radix2\+\_\+q31} (const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q31 $\ast$S, q31\+\_\+t $\ast$p\+Src)
\begin{DoxyCompactList}\small\item\em Processing function for the fixed-\/point C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_ga521f670cd9c571bc61aff9bec89f4c26}{arm\+\_\+cfft\+\_\+radix4\+\_\+f32} (const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+f32 $\ast$S, float32\+\_\+t $\ast$p\+Src)
\begin{DoxyCompactList}\small\item\em Processing function for the floating-\/point Radix-\/4 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
arm\+\_\+status \hyperlink{group__ComplexFFT_gaf336459f684f0b17bfae539ef1b1b78a}{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+f32} (arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+f32 $\ast$S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Initialization function for the floating-\/point C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
arm\+\_\+status \hyperlink{group__ComplexFFT_ga0c2acfda3126c452e75b81669e8ad9ef}{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q15} (arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q15 $\ast$S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Initialization function for the Q15 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
arm\+\_\+status \hyperlink{group__ComplexFFT_gad5caaafeec900c8ff72321c01bbd462c}{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q31} (arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q31 $\ast$S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)
\begin{DoxyCompactList}\small\item\em Initialization function for the Q31 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_ga8d66cdac41b8bf6cefdb895456eee84a}{arm\+\_\+cfft\+\_\+radix4\+\_\+q15} (const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q15 $\ast$S, q15\+\_\+t $\ast$p\+Src)
\begin{DoxyCompactList}\small\item\em Processing function for the Q15 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\item 
void \hyperlink{group__ComplexFFT_gafde3ee1f58cf393b45a9073174fff548}{arm\+\_\+cfft\+\_\+radix4\+\_\+q31} (const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q31 $\ast$S, q31\+\_\+t $\ast$p\+Src)
\begin{DoxyCompactList}\small\item\em Processing function for the Q31 C\+F\+F\+T/\+C\+I\+F\+FT. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
\begin{DoxyParagraph}{}
The Fast Fourier Transform (F\+FT) is an efficient algorithm for computing the Discrete Fourier Transform (D\+FT). The F\+FT can be orders of magnitude faster than the D\+FT, especially for long lengths. The algorithms described in this section operate on complex data. A separate set of functions is devoted to handling of real sequences. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
There are separate algorithms for handling floating-\/point, Q15, and Q31 data types. The algorithms available for each data type are described next. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The F\+FT functions operate in-\/place. That is, the array holding the input data will also be used to hold the corresponding result. The input data is complex and contains {\ttfamily 2$\ast$fft\+Len} interleaved values as shown below. 
\begin{DoxyPre} \{real[0], imag[0], real[1], imag[1],..\} \end{DoxyPre}
 The F\+FT result will be contained in the same array and the frequency domain values will have the same interleaving.
\end{DoxyParagraph}
\begin{DoxyParagraph}{Floating-\/point}
The floating-\/point complex F\+FT uses a mixed-\/radix algorithm. Multiple radix-\/8 stages are performed along with a single radix-\/2 or radix-\/4 stage, as needed. The algorithm supports lengths of \mbox{[}16, 32, 64, ..., 4096\mbox{]} and each length uses a different twiddle factor table. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The function uses the standard F\+FT definition and output values may grow by a factor of {\ttfamily fft\+Len} when computing the forward transform. The inverse transform includes a scale of {\ttfamily 1/fft\+Len} as part of the calculation and this matches the textbook definition of the inverse F\+FT. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
Pre-\/initialized data structures containing twiddle factors and bit reversal tables are provided and defined in {\ttfamily arm\+\_\+const\+\_\+structs.\+h}. Include this header in your function and then pass one of the constant structures as an argument to arm\+\_\+cfft\+\_\+f32. For example\+: 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
{\ttfamily arm\+\_\+cfft\+\_\+f32(arm\+\_\+cfft\+\_\+s\+R\+\_\+f32\+\_\+len64, p\+Src, 1, 1)} 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
computes a 64-\/point inverse complex F\+FT including bit reversal. The data structures are treated as constant data and not modified during the calculation. The same data structure can be reused for multiple transforms including mixing forward and inverse transforms. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
Earlier releases of the library provided separate radix-\/2 and radix-\/4 algorithms that operated on floating-\/point data. These functions are still provided but are deprecated. The older functions are slower and less general than the new functions. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
An example of initialization of the constants for the arm\+\_\+cfft\+\_\+f32 function follows\+: 
\begin{DoxyCode}
\textcolor{keyword}{const} \textcolor{keyword}{static} arm\_cfft\_instance\_f32 *S;
...
  \textcolor{keywordflow}{switch} (length) \{
    \textcolor{keywordflow}{case} 16:
      S = &arm\_cfft\_sR\_f32\_len16;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 32:
      S = &arm\_cfft\_sR\_f32\_len32;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 64:
      S = &arm\_cfft\_sR\_f32\_len64;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 128:
      S = &arm\_cfft\_sR\_f32\_len128;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 256:
      S = &arm\_cfft\_sR\_f32\_len256;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 512:
      S = &arm\_cfft\_sR\_f32\_len512;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 1024:
      S = &arm\_cfft\_sR\_f32\_len1024;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 2048:
      S = &arm\_cfft\_sR\_f32\_len2048;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 4096:
      S = &arm\_cfft\_sR\_f32\_len4096;
      \textcolor{keywordflow}{break};
  \}
\end{DoxyCode}
 
\end{DoxyParagraph}
\begin{DoxyParagraph}{Q15 and Q31}
The floating-\/point complex F\+FT uses a mixed-\/radix algorithm. Multiple radix-\/4 stages are performed along with a single radix-\/2 stage, as needed. The algorithm supports lengths of \mbox{[}16, 32, 64, ..., 4096\mbox{]} and each length uses a different twiddle factor table. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The function uses the standard F\+FT definition and output values may grow by a factor of {\ttfamily fft\+Len} when computing the forward transform. The inverse transform includes a scale of {\ttfamily 1/fft\+Len} as part of the calculation and this matches the textbook definition of the inverse F\+FT. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
Pre-\/initialized data structures containing twiddle factors and bit reversal tables are provided and defined in {\ttfamily arm\+\_\+const\+\_\+structs.\+h}. Include this header in your function and then pass one of the constant structures as an argument to arm\+\_\+cfft\+\_\+q31. For example\+: 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
{\ttfamily arm\+\_\+cfft\+\_\+q31(arm\+\_\+cfft\+\_\+s\+R\+\_\+q31\+\_\+len64, p\+Src, 1, 1)} 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
computes a 64-\/point inverse complex F\+FT including bit reversal. The data structures are treated as constant data and not modified during the calculation. The same data structure can be reused for multiple transforms including mixing forward and inverse transforms. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
Earlier releases of the library provided separate radix-\/2 and radix-\/4 algorithms that operated on floating-\/point data. These functions are still provided but are deprecated. The older functions are slower and less general than the new functions. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
An example of initialization of the constants for the arm\+\_\+cfft\+\_\+q31 function follows\+: 
\begin{DoxyCode}
\textcolor{keyword}{const} \textcolor{keyword}{static} arm\_cfft\_instance\_q31 *S;
...
  \textcolor{keywordflow}{switch} (length) \{
    \textcolor{keywordflow}{case} 16:
      S = &arm\_cfft\_sR\_q31\_len16;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 32:
      S = &arm\_cfft\_sR\_q31\_len32;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 64:
      S = &arm\_cfft\_sR\_q31\_len64;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 128:
      S = &arm\_cfft\_sR\_q31\_len128;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 256:
      S = &arm\_cfft\_sR\_q31\_len256;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 512:
      S = &arm\_cfft\_sR\_q31\_len512;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 1024:
      S = &arm\_cfft\_sR\_q31\_len1024;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 2048:
      S = &arm\_cfft\_sR\_q31\_len2048;
      \textcolor{keywordflow}{break};
    \textcolor{keywordflow}{case} 4096:
      S = &arm\_cfft\_sR\_q31\_len4096;
      \textcolor{keywordflow}{break};
  \}
\end{DoxyCode}
 
\end{DoxyParagraph}


\subsection{Function Documentation}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+f32@{arm\+\_\+cfft\+\_\+f32}}
\index{arm\+\_\+cfft\+\_\+f32@{arm\+\_\+cfft\+\_\+f32}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+f32(const arm\+\_\+cfft\+\_\+instance\+\_\+f32 $\ast$\+S, float32\+\_\+t $\ast$p1, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_f32(const arm_cfft_instance_f32 *S, float32_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+f32 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+instance\+\_\+f32 $\ast$}]{S, }
\item[{float32\+\_\+t $\ast$}]{p1, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_gade0f9c4ff157b6b9c72a1eafd86ebf80}{}\label{group__ComplexFFT_gade0f9c4ff157b6b9c72a1eafd86ebf80}


Processing function for the floating-\/point complex F\+FT. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the floating-\/point C\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p1} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none. 
\end{DoxyReturn}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+q15@{arm\+\_\+cfft\+\_\+q15}}
\index{arm\+\_\+cfft\+\_\+q15@{arm\+\_\+cfft\+\_\+q15}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+q15(const arm\+\_\+cfft\+\_\+instance\+\_\+q15 $\ast$\+S, q15\+\_\+t $\ast$p1, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_q15(const arm_cfft_instance_q15 *S, q15_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+q15 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+instance\+\_\+q15 $\ast$}]{S, }
\item[{q15\+\_\+t $\ast$}]{p1, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga68cdacd2267a2967955e40e6b7ec1229}{}\label{group__ComplexFFT_ga68cdacd2267a2967955e40e6b7ec1229}


Processing function for the Q15 complex F\+FT. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the Q15 C\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p1} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none. 
\end{DoxyReturn}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+q31@{arm\+\_\+cfft\+\_\+q31}}
\index{arm\+\_\+cfft\+\_\+q31@{arm\+\_\+cfft\+\_\+q31}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+q31(const arm\+\_\+cfft\+\_\+instance\+\_\+q31 $\ast$\+S, q31\+\_\+t $\ast$p1, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_q31(const arm_cfft_instance_q31 *S, q31_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+q31 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+instance\+\_\+q31 $\ast$}]{S, }
\item[{q31\+\_\+t $\ast$}]{p1, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga5a0008bd997ab6e2e299ef2fb272fb4b}{}\label{group__ComplexFFT_ga5a0008bd997ab6e2e299ef2fb272fb4b}


Processing function for the fixed-\/point complex F\+FT in Q31 format. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the fixed-\/point C\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p1} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none. 
\end{DoxyReturn}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix2\+\_\+f32@{arm\+\_\+cfft\+\_\+radix2\+\_\+f32}}
\index{arm\+\_\+cfft\+\_\+radix2\+\_\+f32@{arm\+\_\+cfft\+\_\+radix2\+\_\+f32}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix2\+\_\+f32(const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+f32 $\ast$\+S, float32\+\_\+t $\ast$p\+Src)}{arm_cfft_radix2_f32(const arm_cfft_radix2_instance_f32 *S, float32_t *pSrc)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+radix2\+\_\+f32 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+f32 $\ast$}]{S, }
\item[{float32\+\_\+t $\ast$}]{p\+Src}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga9fadd650b802f612ae558ddaab789a6d}{}\label{group__ComplexFFT_ga9fadd650b802f612ae558ddaab789a6d}


Radix-\/2 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000001}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_gade0f9c4ff157b6b9c72a1eafd86ebf80}{arm\+\_\+cfft\+\_\+f32} and will be removed in the future. \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the floating-\/point Radix-\/2 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p\+Src} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none. 
\end{DoxyReturn}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+f32@{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+f32}}
\index{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+f32@{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+f32}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+f32(arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+f32 $\ast$\+S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_radix2_init_f32(arm_cfft_radix2_instance_f32 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}arm\+\_\+status arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+f32 (
\begin{DoxyParamCaption}
\item[{arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+f32 $\ast$}]{S, }
\item[{uint16\+\_\+t}]{fft\+Len, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_gac9565e6bc7229577ecf5e090313cafd7}{}\label{group__ComplexFFT_gac9565e6bc7229577ecf5e090313cafd7}


Initialization function for the floating-\/point C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000002}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_gade0f9c4ff157b6b9c72a1eafd86ebf80}{arm\+\_\+cfft\+\_\+f32} and will be removed in the future. \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em $\ast$S} & points to an instance of the floating-\/point C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in}  & {\em fft\+Len} & length of the F\+FT. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The function returns A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+S\+U\+C\+C\+E\+SS if initialization is successful or A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+A\+R\+G\+U\+M\+E\+N\+T\+\_\+\+E\+R\+R\+OR if {\ttfamily fft\+Len} is not a supported value.
\end{DoxyReturn}
\begin{DoxyParagraph}{Description\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily ifft\+Flag} controls whether a forward or inverse transform is computed. Set(=1) ifft\+Flag for calculation of C\+I\+F\+FT otherwise C\+F\+FT is calculated 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily bit\+Reverse\+Flag} controls whether output is in normal order or bit reversed order. Set(=1) bit\+Reverse\+Flag for output to be in normal order otherwise output is in bit reversed order. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily fft\+Len} Specifies length of C\+F\+F\+T/\+C\+I\+F\+FT process. Supported F\+FT Lengths are 16, 64, 256, 1024. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
This Function also initializes Twiddle factor table pointer and Bit reversal table pointer. 
\end{DoxyParagraph}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q15@{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q15}}
\index{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q15@{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q15}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q15(arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q15 $\ast$\+S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_radix2_init_q15(arm_cfft_radix2_instance_q15 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}arm\+\_\+status arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q15 (
\begin{DoxyParamCaption}
\item[{arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q15 $\ast$}]{S, }
\item[{uint16\+\_\+t}]{fft\+Len, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga5c5b2127b3c4ea2d03692127f8543858}{}\label{group__ComplexFFT_ga5c5b2127b3c4ea2d03692127f8543858}


Initialization function for the Q15 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000003}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga68cdacd2267a2967955e40e6b7ec1229}{arm\+\_\+cfft\+\_\+q15} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em $\ast$S} & points to an instance of the Q15 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in}  & {\em fft\+Len} & length of the F\+FT. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The function returns A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+S\+U\+C\+C\+E\+SS if initialization is successful or A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+A\+R\+G\+U\+M\+E\+N\+T\+\_\+\+E\+R\+R\+OR if {\ttfamily fft\+Len} is not a supported value.
\end{DoxyReturn}
\begin{DoxyParagraph}{Description\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily ifft\+Flag} controls whether a forward or inverse transform is computed. Set(=1) ifft\+Flag for calculation of C\+I\+F\+FT otherwise C\+F\+FT is calculated 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily bit\+Reverse\+Flag} controls whether output is in normal order or bit reversed order. Set(=1) bit\+Reverse\+Flag for output to be in normal order otherwise output is in bit reversed order. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily fft\+Len} Specifies length of C\+F\+F\+T/\+C\+I\+F\+FT process. Supported F\+FT Lengths are 16, 64, 256, 1024. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
This Function also initializes Twiddle factor table pointer and Bit reversal table pointer. 
\end{DoxyParagraph}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q31@{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q31}}
\index{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q31@{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q31}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q31(arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q31 $\ast$\+S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_radix2_init_q31(arm_cfft_radix2_instance_q31 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}arm\+\_\+status arm\+\_\+cfft\+\_\+radix2\+\_\+init\+\_\+q31 (
\begin{DoxyParamCaption}
\item[{arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q31 $\ast$}]{S, }
\item[{uint16\+\_\+t}]{fft\+Len, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_gabec9611e77382f31e152668bf6b4b638}{}\label{group__ComplexFFT_gabec9611e77382f31e152668bf6b4b638}


Initialization function for the Q31 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000004}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga5a0008bd997ab6e2e299ef2fb272fb4b}{arm\+\_\+cfft\+\_\+q31} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em $\ast$S} & points to an instance of the Q31 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in}  & {\em fft\+Len} & length of the F\+FT. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The function returns A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+S\+U\+C\+C\+E\+SS if initialization is successful or A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+A\+R\+G\+U\+M\+E\+N\+T\+\_\+\+E\+R\+R\+OR if {\ttfamily fft\+Len} is not a supported value.
\end{DoxyReturn}
\begin{DoxyParagraph}{Description\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily ifft\+Flag} controls whether a forward or inverse transform is computed. Set(=1) ifft\+Flag for calculation of C\+I\+F\+FT otherwise C\+F\+FT is calculated 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily bit\+Reverse\+Flag} controls whether output is in normal order or bit reversed order. Set(=1) bit\+Reverse\+Flag for output to be in normal order otherwise output is in bit reversed order. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily fft\+Len} Specifies length of C\+F\+F\+T/\+C\+I\+F\+FT process. Supported F\+FT Lengths are 16, 64, 256, 1024. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
This Function also initializes Twiddle factor table pointer and Bit reversal table pointer. 
\end{DoxyParagraph}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix2\+\_\+q15@{arm\+\_\+cfft\+\_\+radix2\+\_\+q15}}
\index{arm\+\_\+cfft\+\_\+radix2\+\_\+q15@{arm\+\_\+cfft\+\_\+radix2\+\_\+q15}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix2\+\_\+q15(const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q15 $\ast$\+S, q15\+\_\+t $\ast$p\+Src)}{arm_cfft_radix2_q15(const arm_cfft_radix2_instance_q15 *S, q15_t *pSrc)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+radix2\+\_\+q15 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q15 $\ast$}]{S, }
\item[{q15\+\_\+t $\ast$}]{p\+Src}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga55b424341dc3efd3fa0bcaaff4bdbf40}{}\label{group__ComplexFFT_ga55b424341dc3efd3fa0bcaaff4bdbf40}


Processing function for the fixed-\/point C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000005}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga68cdacd2267a2967955e40e6b7ec1229}{arm\+\_\+cfft\+\_\+q15} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the fixed-\/point C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p\+Src} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none. 
\end{DoxyReturn}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix2\+\_\+q31@{arm\+\_\+cfft\+\_\+radix2\+\_\+q31}}
\index{arm\+\_\+cfft\+\_\+radix2\+\_\+q31@{arm\+\_\+cfft\+\_\+radix2\+\_\+q31}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix2\+\_\+q31(const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q31 $\ast$\+S, q31\+\_\+t $\ast$p\+Src)}{arm_cfft_radix2_q31(const arm_cfft_radix2_instance_q31 *S, q31_t *pSrc)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+radix2\+\_\+q31 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+radix2\+\_\+instance\+\_\+q31 $\ast$}]{S, }
\item[{q31\+\_\+t $\ast$}]{p\+Src}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga6321f703ec87a274aedaab33d3e766b4}{}\label{group__ComplexFFT_ga6321f703ec87a274aedaab33d3e766b4}


Processing function for the fixed-\/point C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000006}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga5a0008bd997ab6e2e299ef2fb272fb4b}{arm\+\_\+cfft\+\_\+q31} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the fixed-\/point C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p\+Src} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none. 
\end{DoxyReturn}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix4\+\_\+f32@{arm\+\_\+cfft\+\_\+radix4\+\_\+f32}}
\index{arm\+\_\+cfft\+\_\+radix4\+\_\+f32@{arm\+\_\+cfft\+\_\+radix4\+\_\+f32}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix4\+\_\+f32(const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+f32 $\ast$\+S, float32\+\_\+t $\ast$p\+Src)}{arm_cfft_radix4_f32(const arm_cfft_radix4_instance_f32 *S, float32_t *pSrc)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+radix4\+\_\+f32 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+f32 $\ast$}]{S, }
\item[{float32\+\_\+t $\ast$}]{p\+Src}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga521f670cd9c571bc61aff9bec89f4c26}{}\label{group__ComplexFFT_ga521f670cd9c571bc61aff9bec89f4c26}


Processing function for the floating-\/point Radix-\/4 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000007}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_gade0f9c4ff157b6b9c72a1eafd86ebf80}{arm\+\_\+cfft\+\_\+f32} and will be removed in the future. \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the floating-\/point Radix-\/4 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p\+Src} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none. 
\end{DoxyReturn}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+f32@{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+f32}}
\index{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+f32@{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+f32}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+f32(arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+f32 $\ast$\+S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_radix4_init_f32(arm_cfft_radix4_instance_f32 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}arm\+\_\+status arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+f32 (
\begin{DoxyParamCaption}
\item[{arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+f32 $\ast$}]{S, }
\item[{uint16\+\_\+t}]{fft\+Len, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_gaf336459f684f0b17bfae539ef1b1b78a}{}\label{group__ComplexFFT_gaf336459f684f0b17bfae539ef1b1b78a}


Initialization function for the floating-\/point C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000008}{Deprecated}]Do not use this function. It has been superceded by \hyperlink{group__ComplexFFT_gade0f9c4ff157b6b9c72a1eafd86ebf80}{arm\+\_\+cfft\+\_\+f32} and will be removed in the future. \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em $\ast$S} & points to an instance of the floating-\/point C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in}  & {\em fft\+Len} & length of the F\+FT. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The function returns A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+S\+U\+C\+C\+E\+SS if initialization is successful or A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+A\+R\+G\+U\+M\+E\+N\+T\+\_\+\+E\+R\+R\+OR if {\ttfamily fft\+Len} is not a supported value.
\end{DoxyReturn}
\begin{DoxyParagraph}{Description\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily ifft\+Flag} controls whether a forward or inverse transform is computed. Set(=1) ifft\+Flag for calculation of C\+I\+F\+FT otherwise C\+F\+FT is calculated 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily bit\+Reverse\+Flag} controls whether output is in normal order or bit reversed order. Set(=1) bit\+Reverse\+Flag for output to be in normal order otherwise output is in bit reversed order. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily fft\+Len} Specifies length of C\+F\+F\+T/\+C\+I\+F\+FT process. Supported F\+FT Lengths are 16, 64, 256, 1024. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
This Function also initializes Twiddle factor table pointer and Bit reversal table pointer. 
\end{DoxyParagraph}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q15@{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q15}}
\index{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q15@{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q15}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q15(arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q15 $\ast$\+S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_radix4_init_q15(arm_cfft_radix4_instance_q15 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}arm\+\_\+status arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q15 (
\begin{DoxyParamCaption}
\item[{arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q15 $\ast$}]{S, }
\item[{uint16\+\_\+t}]{fft\+Len, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga0c2acfda3126c452e75b81669e8ad9ef}{}\label{group__ComplexFFT_ga0c2acfda3126c452e75b81669e8ad9ef}


Initialization function for the Q15 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000009}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga68cdacd2267a2967955e40e6b7ec1229}{arm\+\_\+cfft\+\_\+q15} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em $\ast$S} & points to an instance of the Q15 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in}  & {\em fft\+Len} & length of the F\+FT. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The function returns A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+S\+U\+C\+C\+E\+SS if initialization is successful or A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+A\+R\+G\+U\+M\+E\+N\+T\+\_\+\+E\+R\+R\+OR if {\ttfamily fft\+Len} is not a supported value.
\end{DoxyReturn}
\begin{DoxyParagraph}{Description\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily ifft\+Flag} controls whether a forward or inverse transform is computed. Set(=1) ifft\+Flag for calculation of C\+I\+F\+FT otherwise C\+F\+FT is calculated 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily bit\+Reverse\+Flag} controls whether output is in normal order or bit reversed order. Set(=1) bit\+Reverse\+Flag for output to be in normal order otherwise output is in bit reversed order. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily fft\+Len} Specifies length of C\+F\+F\+T/\+C\+I\+F\+FT process. Supported F\+FT Lengths are 16, 64, 256, 1024. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
This Function also initializes Twiddle factor table pointer and Bit reversal table pointer. 
\end{DoxyParagraph}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q31@{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q31}}
\index{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q31@{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q31}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q31(arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q31 $\ast$\+S, uint16\+\_\+t fft\+Len, uint8\+\_\+t ifft\+Flag, uint8\+\_\+t bit\+Reverse\+Flag)}{arm_cfft_radix4_init_q31(arm_cfft_radix4_instance_q31 *S, uint16_t fftLen, uint8_t ifftFlag, uint8_t bitReverseFlag)}}]{\setlength{\rightskip}{0pt plus 5cm}arm\+\_\+status arm\+\_\+cfft\+\_\+radix4\+\_\+init\+\_\+q31 (
\begin{DoxyParamCaption}
\item[{arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q31 $\ast$}]{S, }
\item[{uint16\+\_\+t}]{fft\+Len, }
\item[{uint8\+\_\+t}]{ifft\+Flag, }
\item[{uint8\+\_\+t}]{bit\+Reverse\+Flag}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_gad5caaafeec900c8ff72321c01bbd462c}{}\label{group__ComplexFFT_gad5caaafeec900c8ff72321c01bbd462c}


Initialization function for the Q31 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000010}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga5a0008bd997ab6e2e299ef2fb272fb4b}{arm\+\_\+cfft\+\_\+q31} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em $\ast$S} & points to an instance of the Q31 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in}  & {\em fft\+Len} & length of the F\+FT. \\
\hline
\mbox{\tt in}  & {\em ifft\+Flag} & flag that selects forward (ifft\+Flag=0) or inverse (ifft\+Flag=1) transform. \\
\hline
\mbox{\tt in}  & {\em bit\+Reverse\+Flag} & flag that enables (bit\+Reverse\+Flag=1) or disables (bit\+Reverse\+Flag=0) bit reversal of output. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The function returns A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+S\+U\+C\+C\+E\+SS if initialization is successful or A\+R\+M\+\_\+\+M\+A\+T\+H\+\_\+\+A\+R\+G\+U\+M\+E\+N\+T\+\_\+\+E\+R\+R\+OR if {\ttfamily fft\+Len} is not a supported value.
\end{DoxyReturn}
\begin{DoxyParagraph}{Description\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily ifft\+Flag} controls whether a forward or inverse transform is computed. Set(=1) ifft\+Flag for calculation of C\+I\+F\+FT otherwise C\+F\+FT is calculated 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily bit\+Reverse\+Flag} controls whether output is in normal order or bit reversed order. Set(=1) bit\+Reverse\+Flag for output to be in normal order otherwise output is in bit reversed order. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
The parameter {\ttfamily fft\+Len} Specifies length of C\+F\+F\+T/\+C\+I\+F\+FT process. Supported F\+FT Lengths are 16, 64, 256, 1024. 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}
This Function also initializes Twiddle factor table pointer and Bit reversal table pointer. 
\end{DoxyParagraph}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix4\+\_\+q15@{arm\+\_\+cfft\+\_\+radix4\+\_\+q15}}
\index{arm\+\_\+cfft\+\_\+radix4\+\_\+q15@{arm\+\_\+cfft\+\_\+radix4\+\_\+q15}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix4\+\_\+q15(const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q15 $\ast$\+S, q15\+\_\+t $\ast$p\+Src)}{arm_cfft_radix4_q15(const arm_cfft_radix4_instance_q15 *S, q15_t *pSrc)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+radix4\+\_\+q15 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q15 $\ast$}]{S, }
\item[{q15\+\_\+t $\ast$}]{p\+Src}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_ga8d66cdac41b8bf6cefdb895456eee84a}{}\label{group__ComplexFFT_ga8d66cdac41b8bf6cefdb895456eee84a}


Processing function for the Q15 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000011}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga68cdacd2267a2967955e40e6b7ec1229}{arm\+\_\+cfft\+\_\+q15} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the Q15 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p\+Src} & points to the complex data buffer. Processing occurs in-\/place. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none.
\end{DoxyReturn}
\begin{DoxyParagraph}{Input and output formats\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
Internally input is downscaled by 2 for every stage to avoid saturations inside C\+F\+F\+T/\+C\+I\+F\+FT process. Hence the output format is different for different F\+FT sizes. The input and output formats for different F\+FT sizes and number of bits to upscale are mentioned in the tables below for C\+F\+FT and C\+I\+F\+FT\+: 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}

\end{DoxyParagraph}
\index{Complex F\+F\+T Functions@{Complex F\+F\+T Functions}!arm\+\_\+cfft\+\_\+radix4\+\_\+q31@{arm\+\_\+cfft\+\_\+radix4\+\_\+q31}}
\index{arm\+\_\+cfft\+\_\+radix4\+\_\+q31@{arm\+\_\+cfft\+\_\+radix4\+\_\+q31}!Complex F\+F\+T Functions@{Complex F\+F\+T Functions}}
\subsubsection[{\texorpdfstring{arm\+\_\+cfft\+\_\+radix4\+\_\+q31(const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q31 $\ast$\+S, q31\+\_\+t $\ast$p\+Src)}{arm_cfft_radix4_q31(const arm_cfft_radix4_instance_q31 *S, q31_t *pSrc)}}]{\setlength{\rightskip}{0pt plus 5cm}void arm\+\_\+cfft\+\_\+radix4\+\_\+q31 (
\begin{DoxyParamCaption}
\item[{const arm\+\_\+cfft\+\_\+radix4\+\_\+instance\+\_\+q31 $\ast$}]{S, }
\item[{q31\+\_\+t $\ast$}]{p\+Src}
\end{DoxyParamCaption}
)}\hypertarget{group__ComplexFFT_gafde3ee1f58cf393b45a9073174fff548}{}\label{group__ComplexFFT_gafde3ee1f58cf393b45a9073174fff548}


Processing function for the Q31 C\+F\+F\+T/\+C\+I\+F\+FT. 

\begin{DoxyRefDesc}{Deprecated}
\item[\hyperlink{deprecated__deprecated000012}{Deprecated}]Do not use this function. It has been superseded by \hyperlink{group__ComplexFFT_ga5a0008bd997ab6e2e299ef2fb272fb4b}{arm\+\_\+cfft\+\_\+q31} and will be removed \end{DoxyRefDesc}

\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em $\ast$S} & points to an instance of the Q31 C\+F\+F\+T/\+C\+I\+F\+FT structure. \\
\hline
\mbox{\tt in,out}  & {\em $\ast$p\+Src} & points to the complex data buffer of size {\ttfamily 2$\ast$fft\+Len}. Processing occurs in-\/place. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
none.
\end{DoxyReturn}
\begin{DoxyParagraph}{Input and output formats\+:}

\end{DoxyParagraph}
\begin{DoxyParagraph}{}
Internally input is downscaled by 2 for every stage to avoid saturations inside C\+F\+F\+T/\+C\+I\+F\+FT process. Hence the output format is different for different F\+FT sizes. The input and output formats for different F\+FT sizes and number of bits to upscale are mentioned in the tables below for C\+F\+FT and C\+I\+F\+FT\+: 
\end{DoxyParagraph}
\begin{DoxyParagraph}{}

\end{DoxyParagraph}
